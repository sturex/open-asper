package dev.asper.poker.engine.spot;

import dev.asper.advice.ActionMap;
import dev.asper.advice.ActionTweak;
import dev.asper.advice.ActionVector;
import dev.asper.advice.AmountTweak;
import dev.asper.poker.engine.PokerSituation;
import dev.asper.spark.FeatureSchema;

public enum FlopSpot implements Spot {
    FL_HU_IP_CALLER_BBVSSB_AIR(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_AIR_FD(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_AIR_PAIR_FD(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_AIR_PAIR_OC1(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_AIR_PAIR_OC2(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_AIR_PAIR_SD(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_AIR_PAIR_TRASH(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_AIR_SD(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_AIR_WEAK_FD(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_AIR_WEAK_SD(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_BOARD_TOP_COMBO(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_FLUSH_WEAK(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_FULL_HOUSE_LOW(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_NUTS(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_IP_CALLER_BBVSSB_OC_1(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_OC_1_A(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_OC_1_A_FD(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_OC_1_A_SD(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_OC_1_FD(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_OC_1_SD(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_OC_2(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_OC_2_AX(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_OC_2_AX_FD(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_OC_2_AX_SD(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_OC_2_FD(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_OC_2_SD(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_OVER_PAIR(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_OVER_PAIR_AKQ(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_SECOND_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_SECOND_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_SET(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_STRAIGHT_WEAK(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_THIRD_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_THIRD_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_TOP_PAIR_AK(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_TOP_PAIR_AX(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_TOP_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_TOP_PAIR_KQ(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_TOP_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_TRIPS(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_TWO_PAIRS_HIGH(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_TWO_PAIRS_LOW(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_TWO_PAIRS_TOP(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_UNDER_PAIR(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_AIR(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_AIR_FD(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_AIR_PAIR_FD(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_AIR_PAIR_OC1(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_AIR_PAIR_OC2(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_AIR_PAIR_SD(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_AIR_PAIR_TRASH(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_AIR_SD(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_AIR_WEAK_FD(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_AIR_WEAK_SD(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_BOARD_TOP_COMBO(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_FLUSH_WEAK(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_FULL_HOUSE_LOW(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_NUTS(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_OC_1(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_OC_1_A(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_OC_1_A_FD(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_OC_1_A_SD(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_OC_1_FD(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_OC_1_SD(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_OC_2(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_OC_2_AX(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_OC_2_AX_FD(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_OC_2_AX_SD(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_OC_2_FD(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_OC_2_SD(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_OVER_PAIR(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_OVER_PAIR_AKQ(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_SECOND_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_SECOND_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_SET(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_STRAIGHT_WEAK(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_THIRD_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_THIRD_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_TOP_PAIR_AK(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_TOP_PAIR_AX(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_TOP_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_TOP_PAIR_KQ(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_TOP_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_TRIPS(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_TWO_PAIRS_HIGH(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_TWO_PAIRS_LOW(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_TWO_PAIRS_TOP(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_UNDER_PAIR(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_VS_RAISE_WEAK_PAIR(PokerSituation.FL_HU_IP_CALLER_BBVSSB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_BBVSSB_WEAK_PAIR(PokerSituation.FL_HU_IP_CALLER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_AIR(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_AIR_FD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_AIR_PAIR_FD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_AIR_PAIR_OC1(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_AIR_PAIR_OC2(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_AIR_PAIR_SD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_AIR_PAIR_TRASH(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_AIR_SD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_AIR_WEAK_FD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_AIR_WEAK_SD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_BOARD_TOP_COMBO(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_FLUSH_WEAK(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_FULL_HOUSE_LOW(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_NUTS(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_IP_CALLER_MRP_FPVSFP_OC_1(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_OC_1_A(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_OC_1_A_FD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_OC_1_A_SD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_OC_1_FD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_OC_1_SD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_OC_2(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_OC_2_AX(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_OC_2_AX_FD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_OC_2_AX_SD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_OC_2_FD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_OC_2_SD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_OVER_PAIR(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_OVER_PAIR_AKQ(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_SECOND_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_SECOND_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_SET(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_STRAIGHT_WEAK(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_THIRD_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_THIRD_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_TOP_PAIR_AK(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_TOP_PAIR_AX(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_TOP_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_TOP_PAIR_KQ(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_TOP_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_TRIPS(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_TWO_PAIRS_HIGH(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_TWO_PAIRS_LOW(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_TWO_PAIRS_TOP(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_UNDER_PAIR(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSFP_WEAK_PAIR(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_AIR(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_AIR_FD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_AIR_PAIR_FD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_AIR_PAIR_OC1(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_AIR_PAIR_OC2(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_AIR_PAIR_SD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_AIR_PAIR_TRASH(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_AIR_SD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_AIR_WEAK_FD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_AIR_WEAK_SD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_BOARD_TOP_COMBO(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_FLUSH_WEAK(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_FULL_HOUSE_LOW(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_NUTS(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_OC_1(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_OC_1_A(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_OC_1_A_FD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_OC_1_A_SD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_OC_1_FD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_OC_1_SD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_OC_2(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_OC_2_AX(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_OC_2_AX_FD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_OC_2_AX_SD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_OC_2_FD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_OC_2_SD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_OVER_PAIR(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_OVER_PAIR_AKQ(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_SECOND_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_SECOND_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_SET(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_STRAIGHT_WEAK(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_THIRD_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_THIRD_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_TOP_PAIR_AK(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_TOP_PAIR_AX(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_TOP_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_TOP_PAIR_KQ(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_TOP_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_TRIPS(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_TWO_PAIRS_HIGH(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_TWO_PAIRS_LOW(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_TWO_PAIRS_TOP(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_UNDER_PAIR(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_FPVSSBBB_WEAK_PAIR(PokerSituation.FL_HU_IP_CALLER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_AIR(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_AIR_FD(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_AIR_PAIR_FD(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_AIR_PAIR_OC1(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_AIR_PAIR_OC2(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_AIR_PAIR_SD(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_AIR_PAIR_TRASH(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_AIR_SD(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_AIR_WEAK_FD(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_AIR_WEAK_SD(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_BOARD_TOP_COMBO(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_FLUSH_WEAK(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_FULL_HOUSE_LOW(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_NUTS(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_IP_CALLER_MRP_VS_RAISE_OC_1(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_OC_1_A(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_OC_1_A_FD(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_OC_1_A_SD(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_OC_1_FD(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_OC_1_SD(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_OC_2(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_OC_2_AX(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_OC_2_AX_FD(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_OC_2_AX_SD(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_OC_2_FD(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_OC_2_SD(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_OVER_PAIR(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_OVER_PAIR_AKQ(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_SECOND_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_SECOND_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_SET(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_STRAIGHT_WEAK(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_THIRD_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_THIRD_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_TOP_PAIR_AK(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_TOP_PAIR_AX(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_TOP_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_TOP_PAIR_KQ(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_TOP_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_TRIPS(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_TWO_PAIRS_HIGH(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_TWO_PAIRS_LOW(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_TWO_PAIRS_TOP(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_UNDER_PAIR(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_MRP_VS_RAISE_WEAK_PAIR(PokerSituation.FL_HU_IP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_AIR(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_AIR_FD(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_AIR_PAIR_FD(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_AIR_PAIR_OC1(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_AIR_PAIR_OC2(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_AIR_PAIR_SD(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_AIR_PAIR_TRASH(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_AIR_SD(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_AIR_WEAK_FD(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_AIR_WEAK_SD(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_BOARD_TOP_COMBO(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_FLUSH_WEAK(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_FULL_HOUSE_LOW(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_NUTS(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_IP_CALLER_SRP_FPCVSFP_OC_1(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_OC_1_A(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_OC_1_A_FD(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_OC_1_A_SD(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_OC_1_FD(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_OC_1_SD(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_OC_2(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_OC_2_AX(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_OC_2_AX_FD(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_OC_2_AX_SD(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_OC_2_FD(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_OC_2_SD(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_OVER_PAIR(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_OVER_PAIR_AKQ(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_SECOND_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_SECOND_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_SET(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_STRAIGHT_WEAK(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_THIRD_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_THIRD_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_TOP_PAIR_AK(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_TOP_PAIR_AX(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_TOP_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_TOP_PAIR_KQ(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_TOP_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_TRIPS(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_TWO_PAIRS_HIGH(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_TWO_PAIRS_LOW(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_TWO_PAIRS_TOP(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_UNDER_PAIR(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPCVSFP_WEAK_PAIR(PokerSituation.FL_HU_IP_CALLER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_AIR(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_AIR_FD(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_AIR_PAIR_FD(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_AIR_PAIR_OC1(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_AIR_PAIR_OC2(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_AIR_PAIR_SD(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_AIR_PAIR_TRASH(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_AIR_SD(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_AIR_WEAK_FD(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_AIR_WEAK_SD(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_BOARD_TOP_COMBO(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_FLUSH_WEAK(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_FULL_HOUSE_LOW(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_NUTS(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_OC_1(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_OC_1_A(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_OC_1_A_FD(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_OC_1_A_SD(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_OC_1_FD(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_OC_1_SD(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_OC_2(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_OC_2_AX(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_OC_2_AX_FD(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_OC_2_AX_SD(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_OC_2_FD(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_OC_2_SD(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_OVER_PAIR(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_OVER_PAIR_AKQ(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_SECOND_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_SECOND_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_SET(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_STRAIGHT_WEAK(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_THIRD_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_THIRD_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_TOP_PAIR_AK(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_TOP_PAIR_AX(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_TOP_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_TOP_PAIR_KQ(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_TOP_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_TRIPS(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_TWO_PAIRS_HIGH(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_TWO_PAIRS_LOW(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_TWO_PAIRS_TOP(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_UNDER_PAIR(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_FPRVSSBBB_WEAK_PAIR(PokerSituation.FL_HU_IP_CALLER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_AIR(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_AIR_FD(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_AIR_PAIR_FD(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_AIR_PAIR_OC1(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_AIR_PAIR_OC2(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_AIR_PAIR_SD(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_AIR_PAIR_TRASH(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_AIR_SD(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_AIR_WEAK_FD(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_AIR_WEAK_SD(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_BOARD_TOP_COMBO(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_FLUSH_WEAK(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_FULL_HOUSE_LOW(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_NUTS(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_IP_CALLER_SRP_VS_RAISE_OC_1(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_OC_1_A(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_OC_1_A_FD(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_OC_1_A_SD(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_OC_1_FD(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_OC_1_SD(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_OC_2(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_OC_2_AX(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_OC_2_AX_FD(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_OC_2_AX_SD(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_OC_2_FD(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_OC_2_SD(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_OVER_PAIR(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_OVER_PAIR_AKQ(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_SECOND_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_SECOND_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_SET(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_STRAIGHT_WEAK(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_THIRD_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_THIRD_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_TOP_PAIR_AK(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_TOP_PAIR_AX(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_TOP_PAIR_GK(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_TOP_PAIR_KQ(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_TOP_PAIR_WK(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_TRIPS(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_TWO_PAIRS_HIGH(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_TWO_PAIRS_LOW(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_TWO_PAIRS_TOP(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_UNDER_PAIR(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CALLER_SRP_VS_RAISE_WEAK_PAIR(PokerSituation.FL_HU_IP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_CHECKER_BBVSSB_AIR(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_AIR_FD(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_AIR_PAIR_FD(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_AIR_PAIR_OC1(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_AIR_PAIR_OC2(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_AIR_PAIR_SD(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_AIR_PAIR_TRASH(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_AIR_SD(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_AIR_WEAK_FD(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_AIR_WEAK_SD(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_BOARD_TOP_COMBO(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_FLUSH_WEAK(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_FULL_HOUSE_LOW(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_NUTS(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_OC_1(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_OC_1_A(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_OC_1_A_FD(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_OC_1_A_SD(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_OC_1_FD(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_OC_1_SD(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_OC_2(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_OC_2_AX(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_OC_2_AX_FD(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_OC_2_AX_SD(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_OC_2_FD(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_OC_2_SD(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_OVER_PAIR(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_OVER_PAIR_AKQ(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_SECOND_PAIR_GK(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_SECOND_PAIR_WK(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_SET(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_STRAIGHT_WEAK(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_THIRD_PAIR_GK(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_THIRD_PAIR_WK(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_TOP_PAIR_AK(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_TOP_PAIR_AX(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_TOP_PAIR_GK(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_TOP_PAIR_KQ(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_TOP_PAIR_WK(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_TRIPS(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_TWO_PAIRS_HIGH(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_TWO_PAIRS_LOW(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_TWO_PAIRS_TOP(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_UNDER_PAIR(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_BBVSSB_WEAK_PAIR(PokerSituation.FL_HU_IP_CHECKER_BBVSSB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_AIR(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_AIR_FD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_AIR_PAIR_FD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_AIR_PAIR_OC1(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_AIR_PAIR_OC2(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_AIR_PAIR_SD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_AIR_PAIR_TRASH(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_AIR_SD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_AIR_WEAK_FD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_AIR_WEAK_SD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_BOARD_TOP_COMBO(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_FLUSH_WEAK(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_FULL_HOUSE_LOW(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_NUTS(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_OC_1(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_OC_1_A(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_OC_1_A_FD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_OC_1_A_SD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_OC_1_FD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_OC_1_SD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_OC_2(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_OC_2_AX(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_OC_2_AX_FD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_OC_2_AX_SD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_OC_2_FD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_OC_2_SD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_OVER_PAIR(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_OVER_PAIR_AKQ(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_SECOND_PAIR_GK(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_SECOND_PAIR_WK(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_SET(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_STRAIGHT_WEAK(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_THIRD_PAIR_GK(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_THIRD_PAIR_WK(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_TOP_PAIR_AK(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_TOP_PAIR_AX(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_TOP_PAIR_GK(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_TOP_PAIR_KQ(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_TOP_PAIR_WK(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_TRIPS(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_TWO_PAIRS_HIGH(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_TWO_PAIRS_LOW(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_TWO_PAIRS_TOP(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_UNDER_PAIR(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSFP_WEAK_PAIR(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_AIR(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_AIR_FD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_AIR_PAIR_FD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_AIR_PAIR_OC1(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_AIR_PAIR_OC2(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_AIR_PAIR_SD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_AIR_PAIR_TRASH(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_AIR_SD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_AIR_WEAK_FD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_AIR_WEAK_SD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_BOARD_TOP_COMBO(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_FLUSH_WEAK(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_FULL_HOUSE_LOW(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_NUTS(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_OC_1(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_OC_1_A(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_OC_1_A_FD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_OC_1_A_SD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_OC_1_FD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_OC_1_SD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_OC_2(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_OC_2_AX(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_OC_2_AX_FD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_OC_2_AX_SD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_OC_2_FD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_OC_2_SD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_OVER_PAIR(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_OVER_PAIR_AKQ(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_SECOND_PAIR_GK(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_SECOND_PAIR_WK(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_SET(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_STRAIGHT_WEAK(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_THIRD_PAIR_GK(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_THIRD_PAIR_WK(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_TOP_PAIR_AK(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_TOP_PAIR_AX(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_TOP_PAIR_GK(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_TOP_PAIR_KQ(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_TOP_PAIR_WK(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_TRIPS(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_TWO_PAIRS_HIGH(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_TWO_PAIRS_LOW(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_TWO_PAIRS_TOP(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_UNDER_PAIR(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_MRP_FPVSSBBB_WEAK_PAIR(PokerSituation.FL_HU_IP_CHECKER_MRP_FPVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_AIR(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_AIR_FD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_AIR_PAIR_FD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_AIR_PAIR_OC1(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_AIR_PAIR_OC2(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_AIR_PAIR_SD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_AIR_PAIR_TRASH(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_AIR_SD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_AIR_WEAK_FD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_AIR_WEAK_SD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_BOARD_TOP_COMBO(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_FLUSH_WEAK(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_FULL_HOUSE_LOW(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_NUTS(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_OC_1(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_OC_1_A(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_OC_1_A_FD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_OC_1_A_SD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_OC_1_FD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_OC_1_SD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_OC_2(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_OC_2_AX(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_OC_2_AX_FD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_OC_2_AX_SD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_OC_2_FD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_OC_2_SD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_OVER_PAIR(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_OVER_PAIR_AKQ(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_SECOND_PAIR_GK(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_SECOND_PAIR_WK(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_SET(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_STRAIGHT_WEAK(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_THIRD_PAIR_GK(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_THIRD_PAIR_WK(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_TOP_PAIR_AK(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_TOP_PAIR_AX(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_TOP_PAIR_GK(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_TOP_PAIR_KQ(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_TOP_PAIR_WK(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_TRIPS(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_TWO_PAIRS_HIGH(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_TWO_PAIRS_LOW(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_TWO_PAIRS_TOP(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_UNDER_PAIR(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPCVSFP_WEAK_PAIR(PokerSituation.FL_HU_IP_CHECKER_SRP_FPCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_AIR(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_AIR_FD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_AIR_PAIR_FD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_AIR_PAIR_OC1(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_AIR_PAIR_OC2(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_AIR_PAIR_SD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_AIR_PAIR_TRASH(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_AIR_SD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_AIR_WEAK_FD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_AIR_WEAK_SD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_BOARD_TOP_COMBO(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_FLUSH_WEAK(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_FULL_HOUSE_LOW(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_NUTS(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_OC_1(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_OC_1_A(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_OC_1_A_FD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_OC_1_A_SD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_OC_1_FD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_OC_1_SD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_OC_2(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_OC_2_AX(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_OC_2_AX_FD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_OC_2_AX_SD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_OC_2_FD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_OC_2_SD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_OVER_PAIR(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_OVER_PAIR_AKQ(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_SECOND_PAIR_GK(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_SECOND_PAIR_WK(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_SET(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_STRAIGHT_WEAK(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_THIRD_PAIR_GK(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_THIRD_PAIR_WK(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_TOP_PAIR_AK(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_TOP_PAIR_AX(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_TOP_PAIR_GK(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_TOP_PAIR_KQ(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_TOP_PAIR_WK(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_TRIPS(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_TWO_PAIRS_HIGH(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_TWO_PAIRS_LOW(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_TWO_PAIRS_TOP(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_UNDER_PAIR(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_CHECKER_SRP_FPRVSSBBB_WEAK_PAIR(PokerSituation.FL_HU_IP_CHECKER_SRP_FPRVSSBBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CALLER_AIR(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_AIR_FD(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_AIR_PAIR_FD(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_AIR_PAIR_OC1(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_AIR_PAIR_OC2(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_AIR_PAIR_SD(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_AIR_PAIR_TRASH(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_AIR_SD(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_AIR_WEAK_FD(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_AIR_WEAK_SD(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_BOARD_TOP_COMBO(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_FLUSH_WEAK(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_FULL_HOUSE_LOW(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_NUTS(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_IP_PFHU_SB_CALLER_OC_1(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_OC_1_A(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_OC_1_A_FD(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_OC_1_A_SD(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_OC_1_FD(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_OC_1_SD(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_OC_2(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_OC_2_AX(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_OC_2_AX_FD(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_OC_2_AX_SD(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_OC_2_FD(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_OC_2_SD(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_OVER_PAIR(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_OVER_PAIR_AKQ(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_SECOND_PAIR_GK(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_SECOND_PAIR_WK(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_SET(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_STRAIGHT_WEAK(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_THIRD_PAIR_GK(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_THIRD_PAIR_WK(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_TOP_PAIR_AK(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_TOP_PAIR_AX(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_TOP_PAIR_GK(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_TOP_PAIR_KQ(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_TOP_PAIR_WK(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_TRIPS(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_TWO_PAIRS_HIGH(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_TWO_PAIRS_LOW(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_TWO_PAIRS_TOP(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_UNDER_PAIR(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CALLER_WEAK_PAIR(PokerSituation.FL_HU_IP_PFHU_SB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_IP_PFHU_SB_CHECKER_AIR(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_AIR_FD(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_AIR_PAIR_FD(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_AIR_PAIR_OC1(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_AIR_PAIR_OC2(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_AIR_PAIR_SD(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_AIR_PAIR_TRASH(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_AIR_SD(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_AIR_WEAK_FD(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_AIR_WEAK_SD(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_BOARD_TOP_COMBO(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_FLUSH_WEAK(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_FULL_HOUSE_LOW(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_NUTS(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_OC_1(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_OC_1_A(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_OC_1_A_FD(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_OC_1_A_SD(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_OC_1_FD(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_OC_1_SD(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_OC_2(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_OC_2_AX(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_OC_2_AX_FD(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_OC_2_AX_SD(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_OC_2_FD(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_OC_2_SD(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_OVER_PAIR(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_OVER_PAIR_AKQ(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_SECOND_PAIR_GK(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_SECOND_PAIR_WK(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_SET(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_STRAIGHT_WEAK(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_THIRD_PAIR_GK(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_THIRD_PAIR_WK(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_TOP_PAIR_AK(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_TOP_PAIR_AX(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_TOP_PAIR_GK(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_TOP_PAIR_KQ(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_TOP_PAIR_WK(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_TRIPS(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_TWO_PAIRS_HIGH(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_TWO_PAIRS_LOW(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_TWO_PAIRS_TOP(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_UNDER_PAIR(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_IP_PFHU_SB_CHECKER_WEAK_PAIR(PokerSituation.FL_HU_IP_PFHU_SB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CALLER_MRP_FPVSFP_AIR(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_AIR_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_AIR_PAIR_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_AIR_PAIR_OC1(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_AIR_PAIR_OC2(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_AIR_PAIR_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_AIR_PAIR_TRASH(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_AIR_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_AIR_WEAK_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_AIR_WEAK_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_BOARD_TOP_COMBO(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_FLUSH_WEAK(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_FULL_HOUSE_LOW(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_NUTS(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_OOP_CALLER_MRP_FPVSFP_OC_1(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_OC_1_A(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_OC_1_A_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_OC_1_A_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_OC_1_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_OC_1_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_OC_2(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_OC_2_AX(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_OC_2_AX_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_OC_2_AX_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_OC_2_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_OC_2_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_OVER_PAIR(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_OVER_PAIR_AKQ(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_SECOND_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_SECOND_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_SET(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_STRAIGHT_WEAK(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_THIRD_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_THIRD_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_TOP_PAIR_AK(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_TOP_PAIR_AX(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_TOP_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_TOP_PAIR_KQ(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_TOP_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_TRIPS(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_TWO_PAIRS_HIGH(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_TWO_PAIRS_LOW(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_TWO_PAIRS_TOP(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_UNDER_PAIR(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_FPVSFP_WEAK_PAIR(PokerSituation.FL_HU_OOP_CALLER_MRP_FPVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_AIR(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_AIR_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_AIR_PAIR_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_AIR_PAIR_OC1(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_AIR_PAIR_OC2(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_AIR_PAIR_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_AIR_PAIR_TRASH(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_AIR_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_AIR_WEAK_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_AIR_WEAK_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_BOARD_TOP_COMBO(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_FLUSH_WEAK(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_FULL_HOUSE_LOW(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_NUTS(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_OOP_CALLER_MRP_SBBB_OC_1(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_OC_1_A(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_OC_1_A_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_OC_1_A_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_OC_1_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_OC_1_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_OC_2(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_OC_2_AX(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_OC_2_AX_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_OC_2_AX_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_OC_2_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_OC_2_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_OVER_PAIR(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_OVER_PAIR_AKQ(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_SECOND_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_SECOND_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_SET(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_STRAIGHT_WEAK(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_THIRD_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_THIRD_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_TOP_PAIR_AK(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_TOP_PAIR_AX(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_TOP_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_TOP_PAIR_KQ(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_TOP_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_TRIPS(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_TWO_PAIRS_HIGH(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_TWO_PAIRS_LOW(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_TWO_PAIRS_TOP(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_UNDER_PAIR(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_SBBB_WEAK_PAIR(PokerSituation.FL_HU_OOP_CALLER_MRP_SBBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_AIR(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_AIR_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_AIR_PAIR_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_AIR_PAIR_OC1(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_AIR_PAIR_OC2(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_AIR_PAIR_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_AIR_PAIR_TRASH(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_AIR_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_AIR_WEAK_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_AIR_WEAK_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_BOARD_TOP_COMBO(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_FLUSH_WEAK(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_FULL_HOUSE_LOW(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_NUTS(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_OC_1(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_OC_1_A(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_OC_1_A_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_OC_1_A_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_OC_1_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_OC_1_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_OC_2(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_OC_2_AX(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_OC_2_AX_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_OC_2_AX_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_OC_2_FD(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_OC_2_SD(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_OVER_PAIR(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_OVER_PAIR_AKQ(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_SECOND_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_SECOND_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_SET(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_STRAIGHT_WEAK(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_THIRD_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_THIRD_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_TOP_PAIR_AK(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_TOP_PAIR_AX(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_TOP_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_TOP_PAIR_KQ(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_TOP_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_TRIPS(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_TWO_PAIRS_HIGH(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_TWO_PAIRS_LOW(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_TWO_PAIRS_TOP(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_UNDER_PAIR(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_MRP_VS_RAISE_WEAK_PAIR(PokerSituation.FL_HU_OOP_CALLER_MRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_AIR(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_AIR_FD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_AIR_PAIR_FD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_AIR_PAIR_OC1(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_AIR_PAIR_OC2(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_AIR_PAIR_SD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_AIR_PAIR_TRASH(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_AIR_SD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_AIR_WEAK_FD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_AIR_WEAK_SD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_BOARD_TOP_COMBO(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_FLUSH_WEAK(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_FULL_HOUSE_LOW(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_NUTS(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_OOP_CALLER_SBVSBB_OC_1(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_OC_1_A(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_OC_1_A_FD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_OC_1_A_SD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_OC_1_FD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_OC_1_SD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_OC_2(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_OC_2_AX(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_OC_2_AX_FD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_OC_2_AX_SD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_OC_2_FD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_OC_2_SD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_OVER_PAIR(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_OVER_PAIR_AKQ(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_SECOND_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_SECOND_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_SET(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_STRAIGHT_WEAK(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_THIRD_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_THIRD_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_TOP_PAIR_AK(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_TOP_PAIR_AX(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_TOP_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_TOP_PAIR_KQ(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_TOP_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_TRIPS(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_TWO_PAIRS_HIGH(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_TWO_PAIRS_LOW(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_TWO_PAIRS_TOP(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_UNDER_PAIR(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_AIR(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_AIR_FD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_AIR_PAIR_FD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_AIR_PAIR_OC1(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_AIR_PAIR_OC2(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_AIR_PAIR_SD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_AIR_PAIR_TRASH(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_AIR_SD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_AIR_WEAK_FD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_AIR_WEAK_SD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_BOARD_TOP_COMBO(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_FLUSH_WEAK(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_FULL_HOUSE_LOW(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_NUTS(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_OC_1(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_OC_1_A(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_OC_1_A_FD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_OC_1_A_SD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_OC_1_FD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_OC_1_SD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_OC_2(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_OC_2_AX(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_OC_2_AX_FD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_OC_2_AX_SD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_OC_2_FD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_OC_2_SD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_OVER_PAIR(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_OVER_PAIR_AKQ(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_SECOND_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_SECOND_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_SET(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_STRAIGHT_WEAK(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_THIRD_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_THIRD_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_TOP_PAIR_AK(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_TOP_PAIR_AX(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_TOP_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_TOP_PAIR_KQ(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_TOP_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_TRIPS(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_TWO_PAIRS_HIGH(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_TWO_PAIRS_LOW(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_TWO_PAIRS_TOP(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_UNDER_PAIR(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_VS_RAISE_WEAK_PAIR(PokerSituation.FL_HU_OOP_CALLER_SBVSBB_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SBVSBB_WEAK_PAIR(PokerSituation.FL_HU_OOP_CALLER_SBVSBB, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_AIR(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_AIR_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_AIR_PAIR_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_AIR_PAIR_OC1(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_AIR_PAIR_OC2(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_AIR_PAIR_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_AIR_PAIR_TRASH(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_AIR_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_AIR_WEAK_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_AIR_WEAK_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_BOARD_TOP_COMBO(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_FLUSH_WEAK(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_FULL_HOUSE_LOW(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_NUTS(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_OC_1(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_OC_1_A(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_OC_1_A_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_OC_1_A_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_OC_1_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_OC_1_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_OC_2(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_OC_2_AX(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_OC_2_AX_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_OC_2_AX_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_OC_2_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_OC_2_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_OVER_PAIR(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_OVER_PAIR_AKQ(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_SECOND_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_SECOND_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_SET(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_STRAIGHT_WEAK(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_THIRD_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_THIRD_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_TOP_PAIR_AK(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_TOP_PAIR_AX(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_TOP_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_TOP_PAIR_KQ(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_TOP_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_TRIPS(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_TWO_PAIRS_HIGH(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_TWO_PAIRS_LOW(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_TWO_PAIRS_TOP(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_UNDER_PAIR(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_FPRVSFP_WEAK_PAIR(PokerSituation.FL_HU_OOP_CALLER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_AIR(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_AIR_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_AIR_PAIR_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_AIR_PAIR_OC1(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_AIR_PAIR_OC2(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_AIR_PAIR_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_AIR_PAIR_TRASH(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_AIR_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_AIR_WEAK_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_AIR_WEAK_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_BOARD_TOP_COMBO(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_FLUSH_WEAK(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_FULL_HOUSE_LOW(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_NUTS(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_OC_1(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_OC_1_A(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_OC_1_A_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_OC_1_A_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_OC_1_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_OC_1_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_OC_2(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_OC_2_AX(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_OC_2_AX_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_OC_2_AX_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_OC_2_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_OC_2_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_OVER_PAIR(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_OVER_PAIR_AKQ(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_SECOND_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_SECOND_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_SET(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_STRAIGHT_WEAK(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_THIRD_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_THIRD_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_TOP_PAIR_AK(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_TOP_PAIR_AX(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_TOP_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_TOP_PAIR_KQ(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_TOP_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_TRIPS(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_TWO_PAIRS_HIGH(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_TWO_PAIRS_LOW(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_TWO_PAIRS_TOP(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_UNDER_PAIR(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_SBBBCVSFP_WEAK_PAIR(PokerSituation.FL_HU_OOP_CALLER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_AIR(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_AIR_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_AIR_PAIR_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_AIR_PAIR_OC1(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_AIR_PAIR_OC2(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_AIR_PAIR_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_AIR_PAIR_TRASH(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_AIR_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_AIR_WEAK_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_AIR_WEAK_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_BOARD_TOP_COMBO(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_FLUSH_WEAK(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_FULL_HOUSE_LOW(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_NUTS(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_OC_1(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_OC_1_A(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_OC_1_A_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_OC_1_A_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_OC_1_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_OC_1_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_OC_2(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_OC_2_AX(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_OC_2_AX_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_OC_2_AX_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_OC_2_FD(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_OC_2_SD(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_OVER_PAIR(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_OVER_PAIR_AKQ(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_SECOND_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_SECOND_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_SET(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_STRAIGHT_WEAK(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_THIRD_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_THIRD_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_TOP_PAIR_AK(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_TOP_PAIR_AX(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_TOP_PAIR_GK(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_TOP_PAIR_KQ(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_TOP_PAIR_WK(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_TRIPS(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_TWO_PAIRS_HIGH(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_TWO_PAIRS_LOW(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_TWO_PAIRS_TOP(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_UNDER_PAIR(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CALLER_SRP_VS_RAISE_WEAK_PAIR(PokerSituation.FL_HU_OOP_CALLER_SRP_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_AIR(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_AIR_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_AIR_PAIR_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_AIR_PAIR_OC1(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_AIR_PAIR_OC2(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_AIR_PAIR_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_AIR_PAIR_TRASH(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_AIR_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_AIR_WEAK_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_AIR_WEAK_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_BOARD_TOP_COMBO(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_FLUSH_WEAK(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_FULL_HOUSE_LOW(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_NUTS(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_OC_1(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_OC_1_A(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_OC_1_A_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_OC_1_A_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_OC_1_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_OC_1_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_OC_2(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_OC_2_AX(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_OC_2_AX_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_OC_2_AX_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_OC_2_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_OC_2_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_OVER_PAIR(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_OVER_PAIR_AKQ(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_SECOND_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_SECOND_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_SET(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_STRAIGHT_WEAK(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_THIRD_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_THIRD_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_TOP_PAIR_AK(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_TOP_PAIR_AX(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_TOP_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_TOP_PAIR_KQ(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_TOP_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_TRIPS(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_TWO_PAIRS_HIGH(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_TWO_PAIRS_LOW(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_TWO_PAIRS_TOP(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_UNDER_PAIR(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_R1_FPVSFP_WEAK_PAIR(PokerSituation.FL_HU_OOP_CHECKER_MRP_R1_FPVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_AIR(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_AIR_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_AIR_PAIR_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_AIR_PAIR_OC1(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_AIR_PAIR_OC2(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_AIR_PAIR_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_AIR_PAIR_TRASH(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_AIR_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_AIR_WEAK_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_AIR_WEAK_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_BOARD_TOP_COMBO(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_FLUSH_WEAK(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_FULL_HOUSE_LOW(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_NUTS(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_OC_1(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_OC_1_A(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_OC_1_A_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_OC_1_A_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_OC_1_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_OC_1_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_OC_2(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_OC_2_AX(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_OC_2_AX_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_OC_2_AX_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_OC_2_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_OC_2_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_OVER_PAIR(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_OVER_PAIR_AKQ(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_SECOND_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_SECOND_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_SET(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_STRAIGHT_WEAK(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_THIRD_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_THIRD_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_TOP_PAIR_AK(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_TOP_PAIR_AX(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_TOP_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_TOP_PAIR_KQ(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_TOP_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_TRIPS(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_TWO_PAIRS_HIGH(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_TWO_PAIRS_LOW(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_TWO_PAIRS_TOP(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_UNDER_PAIR(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBBBVSFP_WEAK_PAIR(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBBBVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_AIR(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_AIR_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_AIR_PAIR_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_AIR_PAIR_OC1(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_AIR_PAIR_OC2(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_AIR_PAIR_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_AIR_PAIR_TRASH(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_AIR_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_AIR_WEAK_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_AIR_WEAK_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_BOARD_TOP_COMBO(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_FLUSH_WEAK(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_FULL_HOUSE_LOW(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_NUTS(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_OC_1(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_OC_1_A(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_OC_1_A_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_OC_1_A_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_OC_1_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_OC_1_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_OC_2(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_OC_2_AX(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_OC_2_AX_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_OC_2_AX_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_OC_2_FD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_OC_2_SD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_OVER_PAIR(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_OVER_PAIR_AKQ(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_SECOND_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_SECOND_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_SET(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_STRAIGHT_WEAK(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_THIRD_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_THIRD_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_TOP_PAIR_AK(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_TOP_PAIR_AX(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_TOP_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_TOP_PAIR_KQ(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_TOP_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_TRIPS(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_TWO_PAIRS_HIGH(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_TWO_PAIRS_LOW(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_TWO_PAIRS_TOP(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_UNDER_PAIR(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_MRP_SBVSBB_WEAK_PAIR(PokerSituation.FL_HU_OOP_CHECKER_MRP_SBVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_AIR(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_AIR_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_AIR_PAIR_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_AIR_PAIR_OC1(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_AIR_PAIR_OC2(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_AIR_PAIR_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_AIR_PAIR_TRASH(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_AIR_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_AIR_WEAK_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_AIR_WEAK_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_BOARD_TOP_COMBO(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_FLUSH_WEAK(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_FULL_HOUSE_LOW(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_NUTS(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_OC_1(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_OC_1_A(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_OC_1_A_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_OC_1_A_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_OC_1_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_OC_1_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_OC_2(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_OC_2_AX(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_OC_2_AX_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_OC_2_AX_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_OC_2_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_OC_2_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_OVER_PAIR(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_OVER_PAIR_AKQ(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_SECOND_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_SECOND_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_SET(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_STRAIGHT_WEAK(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_THIRD_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_THIRD_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_TOP_PAIR_AK(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_TOP_PAIR_AX(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_TOP_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_TOP_PAIR_KQ(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_TOP_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_TRIPS(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_TWO_PAIRS_HIGH(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_TWO_PAIRS_LOW(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_TWO_PAIRS_TOP(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_UNDER_PAIR(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_FPRVSFP_WEAK_PAIR(PokerSituation.FL_HU_OOP_CHECKER_SRP_FPRVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_AIR(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_AIR_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_AIR_PAIR_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_AIR_PAIR_OC1(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_AIR_PAIR_OC2(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_AIR_PAIR_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_AIR_PAIR_TRASH(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_AIR_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_AIR_WEAK_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_AIR_WEAK_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_BOARD_TOP_COMBO(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_FLUSH_WEAK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_FULL_HOUSE_LOW(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_NUTS(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_OC_1(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_OC_1_A(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_OC_1_A_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_OC_1_A_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_OC_1_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_OC_1_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_OC_2(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_OC_2_AX(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_OC_2_AX_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_OC_2_AX_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_OC_2_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_OC_2_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_OVER_PAIR(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_OVER_PAIR_AKQ(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_SECOND_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_SECOND_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_SET(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_STRAIGHT_WEAK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_THIRD_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_THIRD_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_TOP_PAIR_AK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_TOP_PAIR_AX(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_TOP_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_TOP_PAIR_KQ(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_TOP_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_TRIPS(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_TWO_PAIRS_HIGH(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_TWO_PAIRS_LOW(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_TWO_PAIRS_TOP(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_UNDER_PAIR(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBBBCVSFP_WEAK_PAIR(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBBBCVSFP, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_AIR(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_AIR_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_AIR_PAIR_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_AIR_PAIR_OC1(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_AIR_PAIR_OC2(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_AIR_PAIR_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_AIR_PAIR_TRASH(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_AIR_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_AIR_WEAK_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_AIR_WEAK_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_BOARD_TOP_COMBO(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_FLUSH_WEAK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_FULL_HOUSE_LOW(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_NUTS(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_OC_1(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_OC_1_A(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_OC_1_A_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_OC_1_A_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_OC_1_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_OC_1_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_OC_2(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_OC_2_AX(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_OC_2_AX_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_OC_2_AX_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_OC_2_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_OC_2_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_OVER_PAIR(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_OVER_PAIR_AKQ(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_SECOND_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_SECOND_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_SET(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_STRAIGHT_WEAK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_THIRD_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_THIRD_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_TOP_PAIR_AK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_TOP_PAIR_AX(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_TOP_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_TOP_PAIR_KQ(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_TOP_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_TRIPS(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_TWO_PAIRS_HIGH(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_TWO_PAIRS_LOW(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_TWO_PAIRS_TOP(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_UNDER_PAIR(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBCVSBB_WEAK_PAIR(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBCVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_AIR(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_AIR_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_AIR_PAIR_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_AIR_PAIR_OC1(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_AIR_PAIR_OC2(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_AIR_PAIR_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_AIR_PAIR_TRASH(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_AIR_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_AIR_WEAK_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_AIR_WEAK_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_BOARD_TOP_COMBO(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_FLUSH_WEAK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_FULL_HOUSE_LOW(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_NUTS(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_OC_1(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_OC_1_A(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_OC_1_A_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_OC_1_A_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_OC_1_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_OC_1_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_OC_2(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_OC_2_AX(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_OC_2_AX_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_OC_2_AX_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_OC_2_FD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_OC_2_SD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_OVER_PAIR(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_OVER_PAIR_AKQ(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_SECOND_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_SECOND_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_SET(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_STRAIGHT_WEAK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_THIRD_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_THIRD_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_TOP_PAIR_AK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_TOP_PAIR_AX(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_TOP_PAIR_GK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_TOP_PAIR_KQ(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_TOP_PAIR_WK(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_TRIPS(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_TWO_PAIRS_HIGH(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_TWO_PAIRS_LOW(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_TWO_PAIRS_TOP(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_UNDER_PAIR(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_CHECKER_SRP_SBRVSBB_WEAK_PAIR(PokerSituation.FL_HU_OOP_CHECKER_SRP_SBRVSBB, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CALLER_AIR(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_AIR_FD(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_AIR_PAIR_FD(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_AIR_PAIR_OC1(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_AIR_PAIR_OC2(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_AIR_PAIR_SD(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_AIR_PAIR_TRASH(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_AIR_SD(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_AIR_WEAK_FD(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_AIR_WEAK_SD(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_BOARD_TOP_COMBO(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_FLUSH_WEAK(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_FULL_HOUSE_LOW(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_NUTS(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_OOP_PFHU_BB_CALLER_OC_1(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_OC_1_A(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_OC_1_A_FD(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_OC_1_A_SD(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_OC_1_FD(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_OC_1_SD(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_OC_2(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_OC_2_AX(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_OC_2_AX_FD(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_OC_2_AX_SD(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_OC_2_FD(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_OC_2_SD(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_OVER_PAIR(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_OVER_PAIR_AKQ(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_SECOND_PAIR_GK(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_SECOND_PAIR_WK(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_SET(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_STRAIGHT_WEAK(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_THIRD_PAIR_GK(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_THIRD_PAIR_WK(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_TOP_PAIR_AK(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_TOP_PAIR_AX(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_TOP_PAIR_GK(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_TOP_PAIR_KQ(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_TOP_PAIR_WK(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_TRIPS(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_TWO_PAIRS_HIGH(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_TWO_PAIRS_LOW(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_TWO_PAIRS_TOP(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_UNDER_PAIR(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CALLER_WEAK_PAIR(PokerSituation.FL_HU_OOP_PFHU_BB_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_HU_OOP_PFHU_BB_CHECKER_AIR(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_AIR_FD(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_AIR_PAIR_FD(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_AIR_PAIR_OC1(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_AIR_PAIR_OC2(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_AIR_PAIR_SD(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_AIR_PAIR_TRASH(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_AIR_SD(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_AIR_WEAK_FD(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_AIR_WEAK_SD(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_BOARD_TOP_COMBO(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_FLUSH_WEAK(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_FULL_HOUSE_LOW(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_NUTS(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_OC_1(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_OC_1_A(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_OC_1_A_FD(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_OC_1_A_SD(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_OC_1_FD(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_OC_1_SD(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_OC_2(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_OC_2_AX(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_OC_2_AX_FD(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_OC_2_AX_SD(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_OC_2_FD(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_OC_2_SD(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_OVER_PAIR(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_OVER_PAIR_AKQ(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_SECOND_PAIR_GK(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_SECOND_PAIR_WK(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_SET(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_SPLIT_PAIRS_LOW(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_SPLIT_PAIRS_TOP(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_STRAIGHT_WEAK(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_THIRD_PAIR_GK(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_THIRD_PAIR_WK(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_TOP_PAIR_AK(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_TOP_PAIR_AQAJKQ(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_TOP_PAIR_AX(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_TOP_PAIR_GK(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_TOP_PAIR_KQ(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_TOP_PAIR_WK(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_TRIPS(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_TWO_PAIRS_HIGH(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_TWO_PAIRS_LOW(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_TWO_PAIRS_TOP(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_UNDER_PAIR(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_UNDER_PAIR_AK_BOARD(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_HU_OOP_PFHU_BB_CHECKER_WEAK_PAIR(PokerSituation.FL_HU_OOP_PFHU_BB_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CALLER_AIR(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_AIR_FD(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_AIR_PAIR_FD(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_AIR_PAIR_OC1(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_AIR_PAIR_OC2(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_AIR_PAIR_SD(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_AIR_PAIR_TRASH(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_AIR_SD(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_AIR_WEAK_FD(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_AIR_WEAK_SD(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_BOARD_TOP_COMBO(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_FLUSH_WEAK(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_FULL_HOUSE_LOW(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_NUTS(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_MWP_BTW_CALLER_OC_1(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_OC_1_A(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_OC_1_A_FD(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_OC_1_A_SD(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_OC_1_FD(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_OC_1_SD(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_OC_2(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_OC_2_AX(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_OC_2_AX_FD(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_OC_2_AX_SD(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_OC_2_FD(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_OC_2_SD(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_OVER_PAIR(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_OVER_PAIR_AKQ(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_SECOND_PAIR_GK(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_SECOND_PAIR_WK(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_SET(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_SPLIT_PAIRS_LOW(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_SPLIT_PAIRS_TOP(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_STRAIGHT_WEAK(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_THIRD_PAIR_GK(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_THIRD_PAIR_WK(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_TOP_PAIR_AK(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_TOP_PAIR_AQAJKQ(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_TOP_PAIR_AX(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_TOP_PAIR_GK(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_TOP_PAIR_KQ(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_TOP_PAIR_WK(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_TRIPS(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_TWO_PAIRS_HIGH(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_TWO_PAIRS_LOW(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_TWO_PAIRS_TOP(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_UNDER_PAIR(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_UNDER_PAIR_AK_BOARD(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CALLER_WEAK_PAIR(PokerSituation.FL_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_BTW_CHECKER_AIR(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_AIR_FD(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_AIR_PAIR_FD(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_AIR_PAIR_OC1(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_AIR_PAIR_OC2(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_AIR_PAIR_SD(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_AIR_PAIR_TRASH(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_AIR_SD(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_AIR_WEAK_FD(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_AIR_WEAK_SD(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_BOARD_TOP_COMBO(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_FLUSH_WEAK(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_FULL_HOUSE_LOW(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_NUTS(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_MWP_BTW_CHECKER_OC_1(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_OC_1_A(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_OC_1_A_FD(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_OC_1_A_SD(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_OC_1_FD(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_OC_1_SD(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_OC_2(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_OC_2_AX(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_OC_2_AX_FD(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_OC_2_AX_SD(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_OC_2_FD(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_OC_2_SD(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_OVER_PAIR(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_OVER_PAIR_AKQ(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_SECOND_PAIR_GK(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_SECOND_PAIR_WK(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_SET(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_SPLIT_PAIRS_LOW(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_SPLIT_PAIRS_TOP(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_STRAIGHT_WEAK(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_THIRD_PAIR_GK(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_THIRD_PAIR_WK(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_TOP_PAIR_AK(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_TOP_PAIR_AQAJKQ(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_TOP_PAIR_AX(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_TOP_PAIR_GK(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_TOP_PAIR_KQ(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_TOP_PAIR_WK(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_TRIPS(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_TWO_PAIRS_HIGH(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_TWO_PAIRS_LOW(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_TWO_PAIRS_TOP(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_UNDER_PAIR(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_UNDER_PAIR_AK_BOARD(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_BTW_CHECKER_WEAK_PAIR(PokerSituation.FL_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CALLER_AIR(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_AIR_FD(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_AIR_PAIR_FD(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_AIR_PAIR_OC1(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_AIR_PAIR_OC2(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_AIR_PAIR_SD(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_AIR_PAIR_TRASH(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_AIR_SD(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_AIR_WEAK_FD(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_AIR_WEAK_SD(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_BOARD_TOP_COMBO(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_FLUSH_WEAK(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_FULL_HOUSE_LOW(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_NUTS(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_MWP_LAST_CALLER_OC_1(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_OC_1_A(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_OC_1_A_FD(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_OC_1_A_SD(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_OC_1_FD(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_OC_1_SD(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_OC_2(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_OC_2_AX(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_OC_2_AX_FD(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_OC_2_AX_SD(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_OC_2_FD(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_OC_2_SD(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_OVER_PAIR(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_OVER_PAIR_AKQ(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_SECOND_PAIR_GK(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_SECOND_PAIR_WK(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_SET(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_SPLIT_PAIRS_LOW(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_SPLIT_PAIRS_TOP(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_STRAIGHT_WEAK(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_THIRD_PAIR_GK(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_THIRD_PAIR_WK(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_TOP_PAIR_AK(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_TOP_PAIR_AQAJKQ(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_TOP_PAIR_AX(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_TOP_PAIR_GK(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_TOP_PAIR_KQ(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_TOP_PAIR_WK(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_TRIPS(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_TWO_PAIRS_HIGH(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_TWO_PAIRS_LOW(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_TWO_PAIRS_TOP(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_UNDER_PAIR(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_UNDER_PAIR_AK_BOARD(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CALLER_WEAK_PAIR(PokerSituation.FL_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    FL_MWP_LAST_CHECKER_AIR(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_AIR_FD(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_AIR_PAIR_FD(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_AIR_PAIR_OC1(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_AIR_PAIR_OC2(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_AIR_PAIR_SD(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_AIR_PAIR_TRASH(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_AIR_SD(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_AIR_WEAK_FD(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_AIR_WEAK_SD(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_BOARD_TOP_COMBO(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_FLUSH_WEAK(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_FULL_HOUSE_LOW(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_NUTS(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    FL_MWP_LAST_CHECKER_OC_1(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_OC_1_A(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_OC_1_A_FD(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_OC_1_A_SD(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_OC_1_FD(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_OC_1_SD(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_OC_2(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_OC_2_AX(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_OC_2_AX_FD(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_OC_2_AX_SD(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_OC_2_FD(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_OC_2_SD(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_OVER_PAIR(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_OVER_PAIR_AKQ(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_SECOND_PAIR_GK(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_SECOND_PAIR_WK(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_SET(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_SPLIT_PAIRS_LOW(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_SPLIT_PAIRS_TOP(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_STRAIGHT_WEAK(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_THIRD_PAIR_GK(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_THIRD_PAIR_WK(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_TOP_PAIR_AK(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_TOP_PAIR_AQAJKQ(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_TOP_PAIR_AX(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_TOP_PAIR_GK(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_TOP_PAIR_KQ(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_TOP_PAIR_WK(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_TRIPS(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_TWO_PAIRS_HIGH(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_TWO_PAIRS_LOW(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_TWO_PAIRS_TOP(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_UNDER_PAIR(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_UNDER_PAIR_AK_BOARD(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    FL_MWP_LAST_CHECKER_WEAK_PAIR(PokerSituation.FL_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1)));

    private final PokerSituation pokerSituation;
    private final FeatureSchema actionFeatureSchema;
    private final FeatureSchema amountFeatureSchema;
    private final ActionMap defaultActionMap;
    private final ActionVector defaultActionVector;
    private final ActionTweak actionTweak;
    private final AmountTweak amountTweak;

    FlopSpot(PokerSituation pokerSituation, FeatureSchema actionFeatureSchema, FeatureSchema amountFeatureSchema, ActionVector defaultActionVector) {
        this(pokerSituation, actionFeatureSchema, amountFeatureSchema, defaultActionVector, ActionTweak.randByMultiply);
    }

    FlopSpot(PokerSituation pokerSituation, FeatureSchema actionFeatureSchema, FeatureSchema amountFeatureSchema, ActionVector defaultActionVector, ActionTweak actionTweak) {
        this.pokerSituation = pokerSituation;
        this.actionFeatureSchema = actionFeatureSchema;
        this.amountFeatureSchema = amountFeatureSchema;
        this.defaultActionVector = defaultActionVector;
        this.defaultActionMap = ActionMap.from(defaultActionVector);
        this.actionTweak = actionTweak;
        this.amountTweak = AmountTweak.identity;
    }

    FlopSpot(PokerSituation pokerSituation, FeatureSchema actionFeatureSchema, FeatureSchema amountFeatureSchema, ActionVector defaultActionVector, ActionTweak actionTweak, AmountTweak amountTweak) {
        this.pokerSituation = pokerSituation;
        this.actionFeatureSchema = actionFeatureSchema;
        this.amountFeatureSchema = amountFeatureSchema;
        this.defaultActionVector = defaultActionVector;
        this.defaultActionMap = ActionMap.from(defaultActionVector);
        this.actionTweak = actionTweak;
        this.amountTweak = amountTweak;
    }
    @Override
    public PokerSituation pokerSituation() {
        return pokerSituation;
    }

    @Override
    public FeatureSchema actionFeatureSchema() {
        return actionFeatureSchema;
    }

    @Override
    public FeatureSchema amountFeatureSchema() {
        return amountFeatureSchema;
    }

    @Override
    public ActionMap defaultActionMap() {
        return defaultActionMap;
    }

    @Override
    public ActionVector defaultActionVector() {
        return defaultActionVector;
    }

    @Override
    public double defaultDiffAmountByPot() {
        return 0.3;
    }

    @Override
    public ActionTweak actionTweak() {
        return actionTweak;
    }

    @Override
    public AmountTweak amountTweak() {
        return amountTweak;
    }

    @Override
    public double defaultAmount() {
        return 0.3;
    }

}
