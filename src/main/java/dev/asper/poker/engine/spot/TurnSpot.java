package dev.asper.poker.engine.spot;

import dev.asper.advice.ActionMap;
import dev.asper.advice.ActionTweak;
import dev.asper.advice.ActionVector;
import dev.asper.advice.AmountTweak;
import dev.asper.poker.engine.PokerSituation;
import dev.asper.spark.FeatureSchema;

public enum TurnSpot implements Spot {
    TN_HU_IP_CALLER_AIR(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_AIR_FD(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_AIR_PAIR_FD(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_AIR_PAIR_OC1(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_AIR_PAIR_OC2(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_AIR_PAIR_SD(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_AIR_PAIR_TRASH(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_AIR_SD(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_AIR_WEAK_FD(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_AIR_WEAK_SD(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_BOARD_TOP_COMBO(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_FLUSH_WEAK(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_FULL_HOUSE_LOW(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_NUTS(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    TN_HU_IP_CALLER_OC_1(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_OC_1_A(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_OC_1_A_FD(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_OC_1_A_SD(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_OC_1_FD(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_OC_1_SD(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_OC_2(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_OC_2_AX(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_OC_2_AX_FD(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_OC_2_AX_SD(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_OC_2_FD(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_OC_2_SD(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_OVER_PAIR(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_OVER_PAIR_AKQ(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_SECOND_PAIR_GK(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_SECOND_PAIR_WK(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_SET(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_SPLIT_PAIRS_LOW(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_SPLIT_PAIRS_TOP(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_STRAIGHT_WEAK(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_THIRD_PAIR_GK(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_THIRD_PAIR_WK(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_TOP_PAIR_AK(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_TOP_PAIR_AQAJKQ(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_TOP_PAIR_AX(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_TOP_PAIR_GK(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_TOP_PAIR_KQ(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_TOP_PAIR_WK(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_TRIPS(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_TWO_PAIRS_HIGH(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_TWO_PAIRS_LOW(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_TWO_PAIRS_TOP(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_TWO_PAIRS_TRASH(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_UNDER_PAIR(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_UNDER_PAIR_AK_BOARD(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_AIR(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_AIR_FD(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_AIR_PAIR_FD(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_AIR_PAIR_OC1(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_AIR_PAIR_OC2(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_AIR_PAIR_SD(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_AIR_PAIR_TRASH(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_AIR_SD(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_AIR_WEAK_FD(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_AIR_WEAK_SD(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_BOARD_TOP_COMBO(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_FLUSH_WEAK(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_FULL_HOUSE_LOW(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_NUTS(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    TN_HU_IP_CALLER_VS_RAISE_OC_1(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_OC_1_A(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_OC_1_A_FD(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_OC_1_A_SD(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_OC_1_FD(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_OC_1_SD(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_OC_2(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_OC_2_AX(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_OC_2_AX_FD(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_OC_2_AX_SD(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_OC_2_FD(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_OC_2_SD(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_OVER_PAIR(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_OVER_PAIR_AKQ(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_SECOND_PAIR_GK(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_SECOND_PAIR_WK(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_SET(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_SPLIT_PAIRS_LOW(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_SPLIT_PAIRS_TOP(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_STRAIGHT_WEAK(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_THIRD_PAIR_GK(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_THIRD_PAIR_WK(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_TOP_PAIR_AK(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_TOP_PAIR_AQAJKQ(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_TOP_PAIR_AX(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_TOP_PAIR_GK(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_TOP_PAIR_KQ(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_TOP_PAIR_WK(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_TRIPS(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_TWO_PAIRS_HIGH(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_TWO_PAIRS_LOW(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_TWO_PAIRS_TOP(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_TWO_PAIRS_TRASH(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_UNDER_PAIR(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_UNDER_PAIR_AK_BOARD(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_VS_RAISE_WEAK_PAIR(PokerSituation.TN_HU_IP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CALLER_WEAK_PAIR(PokerSituation.TN_HU_IP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_IP_CHECKER_AIR(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_AIR_FD(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_AIR_PAIR_FD(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_AIR_PAIR_OC1(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_AIR_PAIR_OC2(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_AIR_PAIR_SD(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_AIR_PAIR_TRASH(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_AIR_SD(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_AIR_WEAK_FD(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_AIR_WEAK_SD(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_BOARD_TOP_COMBO(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_FLUSH_WEAK(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_FULL_HOUSE_LOW(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_NUTS(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    TN_HU_IP_CHECKER_OC_1(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_OC_1_A(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_OC_1_A_FD(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_OC_1_A_SD(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_OC_1_FD(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_OC_1_SD(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_OC_2(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_OC_2_AX(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_OC_2_AX_FD(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_OC_2_AX_SD(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_OC_2_FD(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_OC_2_SD(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_OVER_PAIR(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_OVER_PAIR_AKQ(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_SECOND_PAIR_GK(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_SECOND_PAIR_WK(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_SET(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_SPLIT_PAIRS_LOW(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_SPLIT_PAIRS_TOP(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_STRAIGHT_WEAK(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_THIRD_PAIR_GK(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_THIRD_PAIR_WK(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_TOP_PAIR_AK(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_TOP_PAIR_AQAJKQ(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_TOP_PAIR_AX(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_TOP_PAIR_GK(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_TOP_PAIR_KQ(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_TOP_PAIR_WK(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_TRIPS(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_TWO_PAIRS_HIGH(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_TWO_PAIRS_LOW(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_TWO_PAIRS_TOP(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_TWO_PAIRS_TRASH(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_UNDER_PAIR(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_UNDER_PAIR_AK_BOARD(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_IP_CHECKER_WEAK_PAIR(PokerSituation.TN_HU_IP_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CALLER_AIR(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_AIR_FD(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_AIR_PAIR_FD(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_AIR_PAIR_OC1(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_AIR_PAIR_OC2(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_AIR_PAIR_SD(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_AIR_PAIR_TRASH(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_AIR_SD(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_AIR_WEAK_FD(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_AIR_WEAK_SD(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_BOARD_TOP_COMBO(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_FLUSH_WEAK(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_FULL_HOUSE_LOW(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_NUTS(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    TN_HU_OOP_CALLER_OC_1(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_OC_1_A(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_OC_1_A_FD(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_OC_1_A_SD(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_OC_1_FD(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_OC_1_SD(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_OC_2(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_OC_2_AX(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_OC_2_AX_FD(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_OC_2_AX_SD(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_OC_2_FD(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_OC_2_SD(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_OVER_PAIR(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_OVER_PAIR_AKQ(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_SECOND_PAIR_GK(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_SECOND_PAIR_WK(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_SET(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_SPLIT_PAIRS_LOW(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_SPLIT_PAIRS_TOP(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_STRAIGHT_WEAK(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_THIRD_PAIR_GK(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_THIRD_PAIR_WK(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_TOP_PAIR_AK(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_TOP_PAIR_AQAJKQ(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_TOP_PAIR_AX(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_TOP_PAIR_GK(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_TOP_PAIR_KQ(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_TOP_PAIR_WK(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_TRIPS(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_TWO_PAIRS_HIGH(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_TWO_PAIRS_LOW(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_TWO_PAIRS_TOP(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_TWO_PAIRS_TRASH(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_UNDER_PAIR(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_UNDER_PAIR_AK_BOARD(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_AIR(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_AIR_FD(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_AIR_PAIR_FD(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_AIR_PAIR_OC1(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_AIR_PAIR_OC2(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_AIR_PAIR_SD(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_AIR_PAIR_TRASH(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_AIR_SD(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_AIR_WEAK_FD(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_AIR_WEAK_SD(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_BOARD_TOP_COMBO(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_FLUSH_WEAK(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_FULL_HOUSE_LOW(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_NUTS(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    TN_HU_OOP_CALLER_VS_RAISE_OC_1(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_OC_1_A(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_OC_1_A_FD(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_OC_1_A_SD(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_OC_1_FD(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_OC_1_SD(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_OC_2(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_OC_2_AX(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_OC_2_AX_FD(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_OC_2_AX_SD(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_OC_2_FD(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_OC_2_SD(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_OVER_PAIR(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_OVER_PAIR_AKQ(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_SECOND_PAIR_GK(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_SECOND_PAIR_WK(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_SET(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_SPLIT_PAIRS_LOW(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_SPLIT_PAIRS_TOP(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_STRAIGHT_WEAK(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_THIRD_PAIR_GK(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_THIRD_PAIR_WK(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_TOP_PAIR_AK(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_TOP_PAIR_AQAJKQ(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_TOP_PAIR_AX(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_TOP_PAIR_GK(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_TOP_PAIR_KQ(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_TOP_PAIR_WK(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_TRIPS(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_TWO_PAIRS_HIGH(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_TWO_PAIRS_LOW(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_TWO_PAIRS_TOP(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_TWO_PAIRS_TRASH(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_UNDER_PAIR(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_UNDER_PAIR_AK_BOARD(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_VS_RAISE_WEAK_PAIR(PokerSituation.TN_HU_OOP_CALLER_VS_RAISE, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CALLER_WEAK_PAIR(PokerSituation.TN_HU_OOP_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_HU_OOP_CHECKER_FLC_AIR(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_AIR_FD(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_AIR_PAIR_FD(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_AIR_PAIR_OC1(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_AIR_PAIR_OC2(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_AIR_PAIR_SD(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_AIR_PAIR_TRASH(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_AIR_SD(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_AIR_WEAK_FD(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_AIR_WEAK_SD(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_BOARD_TOP_COMBO(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_FLUSH_WEAK(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_FULL_HOUSE_LOW(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_NUTS(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_OC_1(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_OC_1_A(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_OC_1_A_FD(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_OC_1_A_SD(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_OC_1_FD(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_OC_1_SD(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_OC_2(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_OC_2_AX(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_OC_2_AX_FD(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_OC_2_AX_SD(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_OC_2_FD(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_OC_2_SD(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_OVER_PAIR(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_OVER_PAIR_AKQ(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_SECOND_PAIR_GK(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_SECOND_PAIR_WK(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_SET(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_SPLIT_PAIRS_LOW(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_SPLIT_PAIRS_TOP(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_STRAIGHT_WEAK(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_THIRD_PAIR_GK(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_THIRD_PAIR_WK(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_TOP_PAIR_AK(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_TOP_PAIR_AQAJKQ(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_TOP_PAIR_AX(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_TOP_PAIR_GK(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_TOP_PAIR_KQ(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_TOP_PAIR_WK(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_TRIPS(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_TWO_PAIRS_HIGH(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_TWO_PAIRS_LOW(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_TWO_PAIRS_TOP(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_TWO_PAIRS_TRASH(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_UNDER_PAIR(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_UNDER_PAIR_AK_BOARD(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLC_WEAK_PAIR(PokerSituation.TN_HU_OOP_CHECKER_FLC, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_AIR(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_AIR_FD(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_AIR_PAIR_FD(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_AIR_PAIR_OC1(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_AIR_PAIR_OC2(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_AIR_PAIR_SD(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_AIR_PAIR_TRASH(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_AIR_SD(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_AIR_WEAK_FD(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_AIR_WEAK_SD(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_BOARD_TOP_COMBO(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_FLUSH_WEAK(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_FULL_HOUSE_LOW(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_NUTS(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_OC_1(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_OC_1_A(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_OC_1_A_FD(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_OC_1_A_SD(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_OC_1_FD(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_OC_1_SD(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_OC_2(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_OC_2_AX(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_OC_2_AX_FD(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_OC_2_AX_SD(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_OC_2_FD(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_OC_2_SD(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_OVER_PAIR(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_OVER_PAIR_AKQ(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_SECOND_PAIR_GK(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_SECOND_PAIR_WK(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_SET(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_SPLIT_PAIRS_LOW(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_SPLIT_PAIRS_TOP(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_STRAIGHT_WEAK(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_THIRD_PAIR_GK(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_THIRD_PAIR_WK(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_TOP_PAIR_AK(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_TOP_PAIR_AQAJKQ(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_TOP_PAIR_AX(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_TOP_PAIR_GK(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_TOP_PAIR_KQ(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_TOP_PAIR_WK(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_TRIPS(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_TWO_PAIRS_HIGH(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_TWO_PAIRS_LOW(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_TWO_PAIRS_TOP(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_TWO_PAIRS_TRASH(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_UNDER_PAIR(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_UNDER_PAIR_AK_BOARD(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLR_WEAK_PAIR(PokerSituation.TN_HU_OOP_CHECKER_FLR, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_AIR(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_AIR_FD(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_AIR_PAIR_FD(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_AIR_PAIR_OC1(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_AIR_PAIR_OC2(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_AIR_PAIR_SD(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_AIR_PAIR_TRASH(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_AIR_SD(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_AIR_WEAK_FD(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_AIR_WEAK_SD(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_BOARD_TOP_COMBO(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_FLUSH_WEAK(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_FULL_HOUSE_LOW(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_NUTS(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_OC_1(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_OC_1_A(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_OC_1_A_FD(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_OC_1_A_SD(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_OC_1_FD(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_OC_1_SD(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_OC_2(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_OC_2_AX(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_OC_2_AX_FD(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_OC_2_AX_SD(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_OC_2_FD(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_OC_2_SD(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_OVER_PAIR(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_OVER_PAIR_AKQ(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_SECOND_PAIR_GK(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_SECOND_PAIR_WK(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_SET(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_SPLIT_PAIRS_LOW(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_SPLIT_PAIRS_TOP(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_STRAIGHT_WEAK(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_THIRD_PAIR_GK(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_THIRD_PAIR_WK(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_TOP_PAIR_AK(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_TOP_PAIR_AQAJKQ(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_TOP_PAIR_AX(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_TOP_PAIR_GK(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_TOP_PAIR_KQ(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_TOP_PAIR_WK(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_TRIPS(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_TWO_PAIRS_HIGH(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_TWO_PAIRS_LOW(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_TWO_PAIRS_TOP(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_TWO_PAIRS_TRASH(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_UNDER_PAIR(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_UNDER_PAIR_AK_BOARD(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_HU_OOP_CHECKER_FLX_WEAK_PAIR(PokerSituation.TN_HU_OOP_CHECKER_FLX, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CALLER_AIR(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_AIR_FD(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_AIR_PAIR_FD(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_AIR_PAIR_OC1(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_AIR_PAIR_OC2(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_AIR_PAIR_SD(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_AIR_PAIR_TRASH(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_AIR_SD(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_AIR_WEAK_FD(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_AIR_WEAK_SD(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_BOARD_TOP_COMBO(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_FLUSH_WEAK(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_FULL_HOUSE_LOW(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_NUTS(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    TN_MWP_BTW_CALLER_OC_1(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_OC_1_A(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_OC_1_A_FD(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_OC_1_A_SD(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_OC_1_FD(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_OC_1_SD(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_OC_2(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_OC_2_AX(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_OC_2_AX_FD(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_OC_2_AX_SD(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_OC_2_FD(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_OC_2_SD(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_OVER_PAIR(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_OVER_PAIR_AKQ(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_SECOND_PAIR_GK(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_SECOND_PAIR_WK(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_SET(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_SPLIT_PAIRS_LOW(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_SPLIT_PAIRS_TOP(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_STRAIGHT_WEAK(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_THIRD_PAIR_GK(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_THIRD_PAIR_WK(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_TOP_PAIR_AK(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_TOP_PAIR_AQAJKQ(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_TOP_PAIR_AX(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_TOP_PAIR_GK(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_TOP_PAIR_KQ(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_TOP_PAIR_WK(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_TRIPS(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_TWO_PAIRS_HIGH(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_TWO_PAIRS_LOW(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_TWO_PAIRS_TOP(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_TWO_PAIRS_TRASH(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_UNDER_PAIR(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_UNDER_PAIR_AK_BOARD(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CALLER_WEAK_PAIR(PokerSituation.TN_MWP_BTW_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_BTW_CHECKER_AIR(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_AIR_FD(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_AIR_PAIR_FD(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_AIR_PAIR_OC1(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_AIR_PAIR_OC2(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_AIR_PAIR_SD(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_AIR_PAIR_TRASH(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_AIR_SD(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_AIR_WEAK_FD(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_AIR_WEAK_SD(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_BOARD_TOP_COMBO(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_FLUSH_WEAK(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_FULL_HOUSE_LOW(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_NUTS(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    TN_MWP_BTW_CHECKER_OC_1(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_OC_1_A(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_OC_1_A_FD(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_OC_1_A_SD(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_OC_1_FD(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_OC_1_SD(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_OC_2(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_OC_2_AX(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_OC_2_AX_FD(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_OC_2_AX_SD(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_OC_2_FD(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_OC_2_SD(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_OVER_PAIR(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_OVER_PAIR_AKQ(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_SECOND_PAIR_GK(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_SECOND_PAIR_WK(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_SET(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_SPLIT_PAIRS_LOW(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_SPLIT_PAIRS_TOP(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_STRAIGHT_WEAK(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_THIRD_PAIR_GK(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_THIRD_PAIR_WK(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_TOP_PAIR_AK(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_TOP_PAIR_AQAJKQ(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_TOP_PAIR_AX(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_TOP_PAIR_GK(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_TOP_PAIR_KQ(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_TOP_PAIR_WK(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_TRIPS(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_TWO_PAIRS_HIGH(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_TWO_PAIRS_LOW(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_TWO_PAIRS_TOP(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_TWO_PAIRS_TRASH(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_UNDER_PAIR(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_UNDER_PAIR_AK_BOARD(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_BTW_CHECKER_WEAK_PAIR(PokerSituation.TN_MWP_BTW_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CALLER_AIR(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_AIR_FD(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_AIR_PAIR_FD(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_AIR_PAIR_OC1(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_AIR_PAIR_OC2(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_AIR_PAIR_SD(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_AIR_PAIR_TRASH(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_AIR_SD(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_AIR_WEAK_FD(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_AIR_WEAK_SD(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_BOARD_TOP_COMBO(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_FLUSH_WEAK(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_FULL_HOUSE_LOW(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_NUTS(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    TN_MWP_LAST_CALLER_OC_1(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_OC_1_A(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_OC_1_A_FD(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_OC_1_A_SD(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_OC_1_FD(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_OC_1_SD(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_OC_2(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_OC_2_AX(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_OC_2_AX_FD(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_OC_2_AX_SD(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_OC_2_FD(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_OC_2_SD(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_OVER_PAIR(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_OVER_PAIR_AKQ(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_SECOND_PAIR_GK(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_SECOND_PAIR_WK(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_SET(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_SPLIT_PAIRS_LOW(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_SPLIT_PAIRS_TOP(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_STRAIGHT_WEAK(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_THIRD_PAIR_GK(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_THIRD_PAIR_WK(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_TOP_PAIR_AK(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_TOP_PAIR_AQAJKQ(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_TOP_PAIR_AX(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_TOP_PAIR_GK(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_TOP_PAIR_KQ(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_TOP_PAIR_WK(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_TRIPS(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_TWO_PAIRS_HIGH(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_TWO_PAIRS_LOW(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_TWO_PAIRS_TOP(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_TWO_PAIRS_TRASH(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_UNDER_PAIR(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_UNDER_PAIR_AK_BOARD(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CALLER_WEAK_PAIR(PokerSituation.TN_MWP_LAST_CALLER, FeatureSchema.ACTION, FeatureSchema.DIFF_AMOUNT_BY_POT, ActionVector.stdCaller),
    TN_MWP_LAST_CHECKER_AIR(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_AIR_FD(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_AIR_PAIR_FD(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_AIR_PAIR_OC1(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_AIR_PAIR_OC2(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_AIR_PAIR_SD(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_AIR_PAIR_TRASH(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_AIR_SD(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_AIR_WEAK_FD(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_AIR_WEAK_SD(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_BOARD_TOP_COMBO(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_FLUSH_WEAK(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_FULL_HOUSE_LOW(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_NUTS(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdCaller, ActionTweak.randByMultiply(ActionVector.from(0.0, 1, 1, 1))),
    TN_MWP_LAST_CHECKER_OC_1(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_OC_1_A(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_OC_1_A_FD(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_OC_1_A_SD(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_OC_1_FD(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_OC_1_SD(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_OC_2(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_OC_2_AX(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_OC_2_AX_FD(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_OC_2_AX_SD(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_OC_2_FD(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_OC_2_SD(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_OVER_PAIR(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_OVER_PAIR_AKQ(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_SECOND_PAIR_GK(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_SECOND_PAIR_WK(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_SET(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_SPLIT_PAIRS_LOW(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_SPLIT_PAIRS_TOP(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_STRAIGHT_WEAK(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_THIRD_PAIR_GK(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_THIRD_PAIR_WK(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_TOP_PAIR_AK(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_TOP_PAIR_AQAJKQ(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_TOP_PAIR_AX(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_TOP_PAIR_GK(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_TOP_PAIR_KQ(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_TOP_PAIR_WK(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_TRIPS(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_TWO_PAIRS_HIGH(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_TWO_PAIRS_LOW(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_TWO_PAIRS_TOP(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_TWO_PAIRS_TRASH(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_UNDER_PAIR(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_UNDER_PAIR_AK_BOARD(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1))),
    TN_MWP_LAST_CHECKER_WEAK_PAIR(PokerSituation.TN_MWP_LAST_CHECKER, FeatureSchema.ACTION, FeatureSchema.AMOUNT_BY_POT, ActionVector.stdChecker, ActionTweak.randByMultiply(ActionVector.from(0.0, 1.0, 1, 1)));
    private final PokerSituation pokerSituation;
    private final FeatureSchema actionFeatureSchema;
    private final FeatureSchema amountFeatureSchema;
    private final ActionMap defaultActionMap;
    private final ActionVector defaultActionVector;
    private final ActionTweak actionTweak;
    private final AmountTweak amountTweak;

    TurnSpot(PokerSituation pokerSituation, FeatureSchema actionFeatureSchema, FeatureSchema amountFeatureSchema, ActionVector defaultActionVector) {
        this(pokerSituation, actionFeatureSchema, amountFeatureSchema, defaultActionVector, ActionTweak.randByMultiply);
    }

    TurnSpot(PokerSituation pokerSituation, FeatureSchema actionFeatureSchema, FeatureSchema amountFeatureSchema, ActionVector defaultActionVector, ActionTweak actionTweak) {
        this.pokerSituation = pokerSituation;
        this.actionFeatureSchema = actionFeatureSchema;
        this.amountFeatureSchema = amountFeatureSchema;
        this.defaultActionVector = defaultActionVector;
        this.defaultActionMap = ActionMap.from(defaultActionVector);
        this.actionTweak = actionTweak;
        this.amountTweak = AmountTweak.identity;
    }

    TurnSpot(PokerSituation pokerSituation, FeatureSchema actionFeatureSchema, FeatureSchema amountFeatureSchema, ActionVector defaultActionVector, ActionTweak actionTweak, AmountTweak amountTweak) {
        this.pokerSituation = pokerSituation;
        this.actionFeatureSchema = actionFeatureSchema;
        this.amountFeatureSchema = amountFeatureSchema;
        this.defaultActionVector = defaultActionVector;
        this.defaultActionMap = ActionMap.from(defaultActionVector);
        this.actionTweak = actionTweak;
        this.amountTweak = amountTweak;
    }

    @Override
    public PokerSituation pokerSituation() {
        return pokerSituation;
    }

    @Override
    public FeatureSchema actionFeatureSchema() {
        return actionFeatureSchema;
    }

    @Override
    public FeatureSchema amountFeatureSchema() {
        return amountFeatureSchema;
    }

    @Override
    public ActionMap defaultActionMap() {
        return defaultActionMap;
    }

    @Override
    public ActionVector defaultActionVector() {
        return defaultActionVector;
    }

    @Override
    public double defaultDiffAmountByPot() {
        return 0.5;
    }

    @Override
    public ActionTweak actionTweak() {
        return actionTweak;
    }

    @Override
    public AmountTweak amountTweak() {
        return amountTweak;
    }

    @Override
    public double defaultAmount() {
        return 0.5;
    }

}
